#! /bin/bash
## Create a bash script from STRING, or standard input, to standard output
## Usage: scriptify [options] STRING
## Options:
##   -h, --help    Display this message.
##

set -eu

usage() {
  [ "$*" ] && echo "$0: $*"
  sed -n '/^##/,/^$/s/^## \{0,1\}//p' "$0"
  exit 2
} 2>/dev/null

print_template() {

  cat <<EOF
#! /bin/bash
## myscript does this and that...
## Usage: myscript [options] ARG1
## Options:
##   -h, --help    Display this message.
##   -n            Dry-run; only show what would be done.
##

usage() {
  [ "\$*" ] && echo "\$0: \$*"
  sed -n '/^##/,/^$/s/^## \{0,1\}//p' "\$0"
  exit 2
} 2>/dev/null

main() {
  while [ \$# -gt 0 ]; do
    case \$1 in
    (-n) shift; DRY_RUN=1;;
    (-h|--help) usage 2>&1;;
    (--) shift; break;;
    (-*) usage "\$1: unknown option";;
    (*) break;;
    esac
  done
  ${string}
}

main "\$@"
EOF
}

main() {
  while [ $# -gt 0 ]; do
    case $1 in
    (-h|--help) usage 2>&1;;
    (--) shift; break;;
    (-*) usage "$1: unknown option";;
    (*) break;;
    esac
  done

  if [ -t 0 ] ; then
    # reading from terminal
    string=${*}
  else
    # reading from stdin
    string=$(cat /dev/stdin)
  fi
  print_template
}
main "$@"
